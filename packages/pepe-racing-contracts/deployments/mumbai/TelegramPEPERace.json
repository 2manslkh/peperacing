{
  "address": "0xC396A39C85693B8B686636833dED4729c506785a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_bettingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumBet",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_treasuryBps",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minRaceLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxRaceLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "tgChatId",
          "type": "int64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Bet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "tgChatId",
          "type": "int64"
        }
      ],
      "name": "GameAborted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "tgChatId",
          "type": "int64"
        },
        {
          "indexed": false,
          "internalType": "enum TelegramPEPERace.Suit",
          "name": "winningSuit",
          "type": "uint8"
        }
      ],
      "name": "GameEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int64",
          "name": "tgChatId",
          "type": "int64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Win",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "int64",
          "name": "_tgChatId",
          "type": "int64"
        }
      ],
      "name": "abortGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeTgGroups",
      "outputs": [
        {
          "internalType": "int64",
          "name": "",
          "type": "int64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bettingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int64",
          "name": "_tgChatId",
          "type": "int64"
        },
        {
          "internalType": "enum TelegramPEPERace.Suit",
          "name": "winningSuit",
          "type": "uint8"
        }
      ],
      "name": "endGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int64",
          "name": "",
          "type": "int64"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "raceLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minBet",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "inProgress",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int64",
          "name": "_tgChatId",
          "type": "int64"
        }
      ],
      "name": "isGameInProgress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxRaceLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minRaceLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int64",
          "name": "_tgChatId",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "_raceLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minBet",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_drawnCards",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "_players",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_bets",
          "type": "uint256[]"
        },
        {
          "internalType": "enum TelegramPEPERace.Suit[]",
          "name": "_suits",
          "type": "uint8[]"
        }
      ],
      "name": "newGame",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryBps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x23c9af94aa24757823f2a96e63f9a52c5fd61b9026c5b303bd174e942e00dc32",
  "receipt": {
    "to": null,
    "from": "0x1B590CD65a73350514ba50EEAc51AF9e467D4643",
    "contractAddress": "0xC396A39C85693B8B686636833dED4729c506785a",
    "transactionIndex": 1,
    "gasUsed": "1508537",
    "logsBloom": "0x
    "blockHash": "0xdcda5d3104d892c5e347c432134c2e5ae4aee91a61eac2c90f4cfbb50e7d1b1c",
    "transactionHash": "0x23c9af94aa24757823f2a96e63f9a52c5fd61b9026c5b303bd174e942e00dc32",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 39082962,
        "transactionHash": "0x23c9af94aa24757823f2a96e63f9a52c5fd61b9026c5b303bd174e942e00dc32",
        "address": "0xC396A39C85693B8B686636833dED4729c506785a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001b590cd65a73350514ba50eeac51af9e467d4643"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xdcda5d3104d892c5e347c432134c2e5ae4aee91a61eac2c90f4cfbb50e7d1b1c"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 39082962,
        "transactionHash": "0x23c9af94aa24757823f2a96e63f9a52c5fd61b9026c5b303bd174e942e00dc32",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000001b590cd65a73350514ba50eeac51af9e467d4643",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000009a59c8de5d02b00000000000000000000000000000000000000000000000006ebfb38e23b82900000000000000000000000000000000000000000000000259cb263f891b0347700000000000000000000000000000000000000000000000006e2559c5455b2650000000000000000000000000000000000000000000000259cbc09951f9604a2",
        "logIndex": 3,
        "blockHash": "0xdcda5d3104d892c5e347c432134c2e5ae4aee91a61eac2c90f4cfbb50e7d1b1c"
      }
    ],
    "blockNumber": 39082962,
    "cumulativeGasUsed": "1543796",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB0D151d606353b8187d89132C69a80f73347A452",
    1000,
    900,
    "0x1B590CD65a73350514ba50EEAc51AF9e467D4643",
    5,
    30,
    "0x6DE01c3DB3AC8ceC90d7516ADE520e0F0Fdc6525"
  ],
  "numDeployments": 1,
  "solcInputHash": "ce1d9aa5ef3717025275da5c0cacd894",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_bettingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumBet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minRaceLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxRaceLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"tgChatId\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"tgChatId\",\"type\":\"int64\"}],\"name\":\"GameAborted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"tgChatId\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"enum TelegramPEPERace.Suit\",\"name\":\"winningSuit\",\"type\":\"uint8\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"tgChatId\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Win\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int64\",\"name\":\"_tgChatId\",\"type\":\"int64\"}],\"name\":\"abortGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeTgGroups\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bettingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int64\",\"name\":\"_tgChatId\",\"type\":\"int64\"},{\"internalType\":\"enum TelegramPEPERace.Suit\",\"name\":\"winningSuit\",\"type\":\"uint8\"}],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"raceLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBet\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inProgress\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int64\",\"name\":\"_tgChatId\",\"type\":\"int64\"}],\"name\":\"isGameInProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRaceLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minRaceLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int64\",\"name\":\"_tgChatId\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"_raceLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_drawnCards\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"_players\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bets\",\"type\":\"uint256[]\"},{\"internalType\":\"enum TelegramPEPERace.Suit[]\",\"name\":\"_suits\",\"type\":\"uint8[]\"}],\"name\":\"newGame\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"abortGame(int64)\":{\"details\":\"Abort a game and refund the bets. Use in emergencies      e.g. bot crash.\",\"params\":{\"_tgChatId\":\"Telegram group of this game\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TelegramPEPERace.sol\":\"TelegramPEPERace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/TelegramPEPERace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\ninterface IERC20 {\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns(bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function burn(uint256 amount) external;\\n}\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\ncontract TelegramPEPERace is Ownable {\\n    enum Suit {\\n    Spades,\\n    Hearts,\\n    Clubs,\\n    Diamonds\\n}\\n    struct BetInfo {\\n    address player;\\n    uint256 amount;\\n}\\n        struct Game {\\n        uint256 raceLength;\\n        uint256 minBet;\\n        // This is a SHA-256 hash of the random number generated by the bot.\\n        bytes32[] drawnCards;\\n        mapping(Suit => BetInfo[]) betsOnSuits;\\n        bool inProgress;\\n    }\\n\\n    address public treasury;\\n    address public controller;\\n\\n    IERC20 public immutable bettingToken;\\n\\n    uint256 public immutable minimumBet;\\n\\n    // The amount to take as revenue, in basis points.\\n    uint256 public immutable treasuryBps;\\n\\n    uint256 public minRaceLength;\\n    uint256 public maxRaceLength;\\n\\n    mapping(int64 => Game) public games;\\n\\n    int64[] public activeTgGroups;\\n\\n    event Bet(int64 tgChatId, address player, uint256 amount);\\n    event Win(int64 tgChatId, address player, uint256 amount);\\n    event GameEnded(int64 tgChatId, Suit winningSuit);\\n    event GameAborted(int64 tgChatId);\\n    constructor(\\n        address payable _bettingToken,\\n        uint256 _minimumBet,\\n        uint256 _treasuryBps,\\n        address _treasury,\\n        uint256 _minRaceLength,\\n        uint256 _maxRaceLength,\\n        address _controller\\n    ) {\\n        treasury = _treasury;\\n        treasuryBps = _treasuryBps;\\n        bettingToken = IERC20(_bettingToken);\\n        minimumBet = _minimumBet;\\n        minRaceLength = _minRaceLength;\\n        maxRaceLength = _maxRaceLength;\\n        controller = _controller;\\n\\n    }\\n    function isGameInProgress(int64 _tgChatId) public view returns (bool) {\\n        return games[_tgChatId].inProgress;\\n    }\\n\\n    function removeTgId(int64 _tgChatId) internal {\\n        for (uint256 i = 0; i < activeTgGroups.length; i++) {\\n            if (activeTgGroups[i] == _tgChatId) {\\n                activeTgGroups[i] = activeTgGroups[activeTgGroups.length - 1];\\n                activeTgGroups.pop();\\n            }\\n        }\\n    }\\n\\n    function newGame(\\n        int64 _tgChatId,\\n        uint256 _raceLength,\\n        uint256 _minBet,\\n        bytes32[] calldata _drawnCards,\\n        address[] calldata _players,\\n        uint256[] calldata _bets,\\n        Suit[] memory _suits\\n    ) public returns (uint256[] memory) {\\n        require(msg.sender == controller, \\\"not controller\\\");\\n        require(_raceLength <= maxRaceLength, \\\"Race too long\\\");\\n        require(_raceLength >= minRaceLength, \\\"Race too short\\\");\\n        require(_minBet >= minimumBet, \\\"Min bet too small\\\");\\n        require(_players.length == _bets.length && _players.length == _suits.length, \\\"inputs mismatched\\\");\\n        require(_players.length > 1, \\\"Not enough players\\\");\\n        require(!isGameInProgress(_tgChatId), \\\"already in progress\\\");\\n        Game storage g = games[_tgChatId];\\n        g.raceLength = _raceLength;\\n        g.minBet = _minBet;\\n        g.drawnCards = _drawnCards;\\n        g.inProgress = true;\\n  \\n        for (uint16 i = 0; i < _players.length; i++) {\\n            require(_bets[i] >= _minBet, \\\"Bet too small\\\");\\n            g.betsOnSuits[_suits[i]].push(BetInfo({\\n                player: _players[i],\\n                amount: _bets[i]\\n            }));\\n\\n        bool isSent = bettingToken.transferFrom(_players[i], address(this), _bets[i]);\\n        require(isSent, \\\"Funds transfer failed\\\");\\n\\n        emit Bet(_tgChatId, _players[i], _bets[i]);\\n    }\\n\\n    activeTgGroups.push(_tgChatId);\\n    return _bets;\\n    }\\n  \\n\\n    function endGame(int64 _tgChatId, Suit winningSuit) public onlyOwner {\\n    require(isGameInProgress(_tgChatId), \\\"No game in progress for this Telegram chat ID\\\");\\n    \\n    Game storage g = games[_tgChatId];\\n    g.inProgress = false;\\n    \\n    uint256 losersTotalBet = 0;\\n    uint256 winnersTotalBet = 0;\\n\\n    // Calculate the total losers' and winners' bet\\n    for (uint8 i = 0; i < 4; i++) {\\n        for (uint j = 0; j < g.betsOnSuits[Suit(i)].length; j++) {\\n            if (Suit(i) == winningSuit) {\\n                winnersTotalBet += g.betsOnSuits[Suit(i)][j].amount;\\n            } else {\\n                losersTotalBet += g.betsOnSuits[Suit(i)][j].amount;\\n            }\\n        }\\n    }\\n\\n    // Deduct 10% for treasury\\n    uint256 treasuryAmount = (losersTotalBet * treasuryBps) / 100;\\n    uint256 availableForWinners = losersTotalBet - treasuryAmount;\\n\\n    bool treasurySent = bettingToken.transfer(treasury, treasuryAmount);\\n    require(treasurySent, \\\"Transfer to treasury failed\\\");\\n\\n    // Distribute the remaining losers' bets among the winners\\n    for (uint j = 0; j < g.betsOnSuits[winningSuit].length; j++) {\\n        BetInfo storage winningBet = g.betsOnSuits[winningSuit][j];\\n        \\n        // Calculate how much each winner gets from the available amount\\n        uint256 reward = (winningBet.amount * availableForWinners) / winnersTotalBet;\\n\\n        uint256 totalAmount = winningBet.amount + reward;\\n\\n        bool isSent = bettingToken.transfer(winningBet.player, totalAmount);\\n        require(isSent, \\\"Transfer failed for winner\\\");\\n\\n        emit Win(_tgChatId, winningBet.player, totalAmount);\\n    }\\n\\n    emit GameEnded(_tgChatId, winningSuit);\\n}\\n\\n    /**\\n * @dev Abort a game and refund the bets. Use in emergencies\\n *      e.g. bot crash.\\n * @param _tgChatId Telegram group of this game\\n */\\nfunction abortGame(int64 _tgChatId) public onlyOwner {\\n    require(isGameInProgress(_tgChatId), \\\"No game in progress for this Telegram chat ID\\\");\\n    \\n    Game storage g = games[_tgChatId];\\n    \\n    // Iterate through each suit and refund the bets for each player\\n    for (uint8 i = 0; i < 4; i++) {\\n        Suit currentSuit = Suit(i);\\n        BetInfo[] storage betsForSuit = g.betsOnSuits[currentSuit];\\n        for (uint16 j = 0; j < betsForSuit.length; j++) {\\n            uint256 refundAmount = betsForSuit[j].amount;\\n            require(bettingToken.transfer(betsForSuit[j].player, refundAmount), \\\"Refund failed\\\");\\n        }\\n    }\\n    \\n    // Mark the game as not in progress\\n    g.inProgress = false;\\n    emit GameAborted(_tgChatId);\\n}\\n\\n}\\n\",\"keccak256\":\"0x32098ad1b1e8bab82e31829b585d4ab3b43c9da0a61cad4095068bf3493289c3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001a0138038062001a018339810160408190526200003491620000f8565b6200003f336200008f565b600180546001600160a01b039586166001600160a01b03199182161790915560c09590955295831660805260a0949094526003556004929092556002805493909216921691909117905562000175565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000f557600080fd5b50565b600080600080600080600060e0888a0312156200011457600080fd5b87516200012181620000df565b80975050602088015195506040880151945060608801516200014381620000df565b809450506080880151925060a0880151915060c08801516200016581620000df565b8091505092959891949750929550565b60805160a05160c051611832620001cf600039600081816101720152610b9e01526000818161023301526103dd015260008181610133015281816106d901528181610c0a01528181610dc5015261104501526118326000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063d057fc1f11610066578063d057fc1f14610268578063f2fde38b1461028e578063f3619716146102a1578063f77c4791146102f057600080fd5b80638da5cb5b1461020a578063aa84b2291461021b578063c38a8afd1461022e578063cb99e91f1461025557600080fd5b806361d027b3116100d357806361d027b3146101ab57806363c42460146101be578063715018a6146101f7578063748e636e1461020157600080fd5b8063192fbbea1461010557806343425e881461012e5780634dc10ea11461016d57806351385f36146101a2575b600080fd5b61011861011336600461149b565b610303565b604051610125919061157c565b60405180910390f35b6101557f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610125565b6101947f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610125565b61019460045481565b600154610155906001600160a01b031681565b6101e76101cc3660046115c0565b60070b60009081526005602052604090206004015460ff1690565b6040519015158152602001610125565b6101ff610958565b005b61019460035481565b6000546001600160a01b0316610155565b6101ff6102293660046115e2565b61096c565b6101947f000000000000000000000000000000000000000000000000000000000000000081565b6101ff6102633660046115c0565b610f4f565b61027b610276366004611615565b6111b7565b60405160079190910b8152602001610125565b6101ff61029c36600461162e565b6111ee565b6102d36102af3660046115c0565b60056020526000908152604090208054600182015460049092015490919060ff1683565b604080519384526020840192909252151590820152606001610125565b600254610155906001600160a01b031681565b6002546060906001600160a01b031633146103565760405162461bcd60e51b815260206004820152600e60248201526d3737ba1031b7b73a3937b63632b960911b60448201526064015b60405180910390fd5b6004548a11156103985760405162461bcd60e51b815260206004820152600d60248201526c5261636520746f6f206c6f6e6760981b604482015260640161034d565b6003548a10156103db5760405162461bcd60e51b815260206004820152600e60248201526d149858d9481d1bdbc81cda1bdc9d60921b604482015260640161034d565b7f000000000000000000000000000000000000000000000000000000000000000089101561043f5760405162461bcd60e51b8152602060048201526011602482015270135a5b8818995d081d1bdbc81cdb585b1b607a1b604482015260640161034d565b848314801561044e5750815185145b61048e5760405162461bcd60e51b81526020600482015260116024820152701a5b9c1d5d1cc81b5a5cdb585d18da1959607a1b604482015260640161034d565b600185116104d35760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f75676820706c617965727360701b604482015260640161034d565b6104f28b60070b60009081526005602052604090206004015460ff1690565b156105355760405162461bcd60e51b8152602060048201526013602482015272616c726561647920696e2070726f677265737360681b604482015260640161034d565b60078b900b60009081526005602052604090208a8155600181018a9055610560600282018a8a611311565b5060048101805460ff1916600117905560005b61ffff81168711156108ba578a86868361ffff1681811061059657610596611657565b9050602002013510156105db5760405162461bcd60e51b815260206004820152600d60248201526c10995d081d1bdbc81cdb585b1b609a1b604482015260640161034d565b816003016000858361ffff16815181106105f7576105f7611657565b602002602001015160038111156106105761061061166d565b60038111156106215761062161166d565b815260200190815260200160002060405180604001604052808a8a8561ffff1681811061065057610650611657565b9050602002016020810190610665919061162e565b6001600160a01b0316815260200188888561ffff1681811061068957610689611657565b602090810292909201359092528354600180820186556000958652828620855160029093020180546001600160a01b0319166001600160a01b0393841617815594909201519390910192909255507f0000000000000000000000000000000000000000000000000000000000000000166323b872dd8a8a61ffff861681811061071457610714611657565b9050602002016020810190610729919061162e565b308a8a8761ffff1681811061074057610740611657565b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152506020909102013560448201526064016020604051808303816000875af115801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c09190611683565b9050806108075760405162461bcd60e51b8152602060048201526015602482015274119d5b991cc81d1c985b9cd9995c8819985a5b1959605a1b604482015260640161034d565b7f95d208f3deafce2776ab2b0da2c1b2e6dfc749f9b7993e0fe1df82ed26358d358e8a8a8561ffff1681811061083f5761083f611657565b9050602002016020810190610854919061162e565b89898661ffff1681811061086a5761086a611657565b9050602002013560405161089f9392919060079390930b83526001600160a01b03919091166020830152604082015260600190565b60405180910390a150806108b2816116bb565b915050610573565b5060068c90806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff160217905550848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929f9e505050505050505050505050505050565b610960611267565b61096a60006112c1565b565b610974611267565b6109938260070b60009081526005602052604090206004015460ff1690565b6109af5760405162461bcd60e51b815260040161034d906116dc565b600782900b600090815260056020526040812060048101805460ff191690559080805b60048160ff161015610b945760005b8460030160008360ff1660038111156109fc576109fc61166d565b6003811115610a0d57610a0d61166d565b6003811115610a1e57610a1e61166d565b8152602081019190915260400160002054811015610b8157856003811115610a4857610a4861166d565b8260ff166003811115610a5d57610a5d61166d565b6003811115610a6e57610a6e61166d565b03610af3578460030160008360ff166003811115610a8e57610a8e61166d565b6003811115610a9f57610a9f61166d565b6003811115610ab057610ab061166d565b81526020019081526020016000208181548110610acf57610acf611657565b90600052602060002090600202016001015483610aec9190611729565b9250610b6f565b8460030160008360ff166003811115610b0e57610b0e61166d565b6003811115610b1f57610b1f61166d565b6003811115610b3057610b3061166d565b81526020019081526020016000208181548110610b4f57610b4f611657565b90600052602060002090600202016001015484610b6c9190611729565b93505b80610b7981611742565b9150506109e1565b5080610b8c8161175b565b9150506109d2565b5060006064610bc37f00000000000000000000000000000000000000000000000000000000000000008561177a565b610bcd9190611791565b90506000610bdb82856117b3565b60015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590529192506000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c799190611683565b905080610cc85760405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220746f207472656173757279206661696c65640000000000604482015260640161034d565b60005b866003016000896003811115610ce357610ce361166d565b6003811115610cf457610cf461166d565b8152602081019190915260400160002054811015610f0b5760008760030160008a6003811115610d2657610d2661166d565b6003811115610d3757610d3761166d565b81526020019081526020016000208281548110610d5657610d56611657565b90600052602060002090600202019050600086858360010154610d79919061177a565b610d839190611791565b90506000818360010154610d979190611729565b835460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529192506000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e349190611683565b905080610e835760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206661696c656420666f722077696e6e6572000000000000604482015260640161034d565b7fc2dc76ce664ffea95879f58074e6b60c3ebb762a62b91e9af938873a81c28d148d8560000160009054906101000a90046001600160a01b031684604051610eec9392919060079390930b83526001600160a01b03919091166020830152604082015260600190565b60405180910390a1505050508080610f0390611742565b915050610ccb565b507f877256d94166a4680c11c46305317970e021267850136384bfa290a9d1bbbf848888604051610f3d9291906117c6565b60405180910390a15050505050505050565b610f57611267565b610f768160070b60009081526005602052604090206004015460ff1690565b610f925760405162461bcd60e51b815260040161034d906116dc565b600781900b6000908152600560205260408120905b60048160ff16101561116f5760008160ff166003811115610fca57610fca61166d565b90506000836003016000836003811115610fe657610fe661166d565b6003811115610ff757610ff761166d565b8152602001908152602001600020905060005b815461ffff82161015611159576000828261ffff168154811061102f5761102f611657565b90600052602060002090600202016001015490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb848461ffff168154811061108857611088611657565b600091825260209091206002909102015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156110e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110a9190611683565b6111465760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b604482015260640161034d565b5080611151816116bb565b91505061100a565b50505080806111679061175b565b915050610fa7565b5060048101805460ff19169055604051600783900b81527f5a51be1110849734862b57434894be46168d278d43436e2240f0e9c97967e8f79060200160405180910390a15050565b600681815481106111c757600080fd5b9060005260206000209060049182820401919006600802915054906101000a900460070b81565b6111f6611267565b6001600160a01b03811661125b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034d565b611264816112c1565b50565b6000546001600160a01b0316331461096a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561134c579160200282015b8281111561134c578235825591602001919060010190611331565b5061135892915061135c565b5090565b5b80821115611358576000815560010161135d565b8035600781900b811461138357600080fd5b919050565b60008083601f84011261139a57600080fd5b50813567ffffffffffffffff8111156113b257600080fd5b6020830191508360208260051b85010111156113cd57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b80356004811061138357600080fd5b600082601f83011261140a57600080fd5b8135602067ffffffffffffffff80831115611427576114276113d4565b8260051b604051601f19603f8301168101818110848211171561144c5761144c6113d4565b60405293845285810183019383810192508785111561146a57600080fd5b83870191505b8482101561149057611481826113ea565b83529183019190830190611470565b979650505050505050565b60008060008060008060008060008060e08b8d0312156114ba57600080fd5b6114c38b611371565b995060208b0135985060408b0135975060608b013567ffffffffffffffff808211156114ee57600080fd5b6114fa8e838f01611388565b909950975060808d013591508082111561151357600080fd5b61151f8e838f01611388565b909750955060a08d013591508082111561153857600080fd5b6115448e838f01611388565b909550935060c08d013591508082111561155d57600080fd5b5061156a8d828e016113f9565b9150509295989b9194979a5092959850565b6020808252825182820181905260009190848201906040850190845b818110156115b457835183529284019291840191600101611598565b50909695505050505050565b6000602082840312156115d257600080fd5b6115db82611371565b9392505050565b600080604083850312156115f557600080fd5b6115fe83611371565b915061160c602084016113ea565b90509250929050565b60006020828403121561162757600080fd5b5035919050565b60006020828403121561164057600080fd5b81356001600160a01b03811681146115db57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60006020828403121561169557600080fd5b815180151581146115db57600080fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168181036116d2576116d26116a5565b6001019392505050565b6020808252602d908201527f4e6f2067616d6520696e2070726f677265737320666f7220746869732054656c60408201526c1959dc985b4818da185d081251609a1b606082015260800190565b8082018082111561173c5761173c6116a5565b92915050565b600060018201611754576117546116a5565b5060010190565b600060ff821660ff8103611771576117716116a5565b60010192915050565b808202811582820484141761173c5761173c6116a5565b6000826117ae57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561173c5761173c6116a5565b600783900b815260408101600483106117ef57634e487b7160e01b600052602160045260246000fd5b826020830152939250505056fea26469706673582212202c20b3a610c5e49c61f7d17ce2f2d56457aeda27e7fc4da4f9691922d5118c2c64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063d057fc1f11610066578063d057fc1f14610268578063f2fde38b1461028e578063f3619716146102a1578063f77c4791146102f057600080fd5b80638da5cb5b1461020a578063aa84b2291461021b578063c38a8afd1461022e578063cb99e91f1461025557600080fd5b806361d027b3116100d357806361d027b3146101ab57806363c42460146101be578063715018a6146101f7578063748e636e1461020157600080fd5b8063192fbbea1461010557806343425e881461012e5780634dc10ea11461016d57806351385f36146101a2575b600080fd5b61011861011336600461149b565b610303565b604051610125919061157c565b60405180910390f35b6101557f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610125565b6101947f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610125565b61019460045481565b600154610155906001600160a01b031681565b6101e76101cc3660046115c0565b60070b60009081526005602052604090206004015460ff1690565b6040519015158152602001610125565b6101ff610958565b005b61019460035481565b6000546001600160a01b0316610155565b6101ff6102293660046115e2565b61096c565b6101947f000000000000000000000000000000000000000000000000000000000000000081565b6101ff6102633660046115c0565b610f4f565b61027b610276366004611615565b6111b7565b60405160079190910b8152602001610125565b6101ff61029c36600461162e565b6111ee565b6102d36102af3660046115c0565b60056020526000908152604090208054600182015460049092015490919060ff1683565b604080519384526020840192909252151590820152606001610125565b600254610155906001600160a01b031681565b6002546060906001600160a01b031633146103565760405162461bcd60e51b815260206004820152600e60248201526d3737ba1031b7b73a3937b63632b960911b60448201526064015b60405180910390fd5b6004548a11156103985760405162461bcd60e51b815260206004820152600d60248201526c5261636520746f6f206c6f6e6760981b604482015260640161034d565b6003548a10156103db5760405162461bcd60e51b815260206004820152600e60248201526d149858d9481d1bdbc81cda1bdc9d60921b604482015260640161034d565b7f000000000000000000000000000000000000000000000000000000000000000089101561043f5760405162461bcd60e51b8152602060048201526011602482015270135a5b8818995d081d1bdbc81cdb585b1b607a1b604482015260640161034d565b848314801561044e5750815185145b61048e5760405162461bcd60e51b81526020600482015260116024820152701a5b9c1d5d1cc81b5a5cdb585d18da1959607a1b604482015260640161034d565b600185116104d35760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f75676820706c617965727360701b604482015260640161034d565b6104f28b60070b60009081526005602052604090206004015460ff1690565b156105355760405162461bcd60e51b8152602060048201526013602482015272616c726561647920696e2070726f677265737360681b604482015260640161034d565b60078b900b60009081526005602052604090208a8155600181018a9055610560600282018a8a611311565b5060048101805460ff1916600117905560005b61ffff81168711156108ba578a86868361ffff1681811061059657610596611657565b9050602002013510156105db5760405162461bcd60e51b815260206004820152600d60248201526c10995d081d1bdbc81cdb585b1b609a1b604482015260640161034d565b816003016000858361ffff16815181106105f7576105f7611657565b602002602001015160038111156106105761061061166d565b60038111156106215761062161166d565b815260200190815260200160002060405180604001604052808a8a8561ffff1681811061065057610650611657565b9050602002016020810190610665919061162e565b6001600160a01b0316815260200188888561ffff1681811061068957610689611657565b602090810292909201359092528354600180820186556000958652828620855160029093020180546001600160a01b0319166001600160a01b0393841617815594909201519390910192909255507f0000000000000000000000000000000000000000000000000000000000000000166323b872dd8a8a61ffff861681811061071457610714611657565b9050602002016020810190610729919061162e565b308a8a8761ffff1681811061074057610740611657565b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152506020909102013560448201526064016020604051808303816000875af115801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c09190611683565b9050806108075760405162461bcd60e51b8152602060048201526015602482015274119d5b991cc81d1c985b9cd9995c8819985a5b1959605a1b604482015260640161034d565b7f95d208f3deafce2776ab2b0da2c1b2e6dfc749f9b7993e0fe1df82ed26358d358e8a8a8561ffff1681811061083f5761083f611657565b9050602002016020810190610854919061162e565b89898661ffff1681811061086a5761086a611657565b9050602002013560405161089f9392919060079390930b83526001600160a01b03919091166020830152604082015260600190565b60405180910390a150806108b2816116bb565b915050610573565b5060068c90806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff160217905550848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929f9e505050505050505050505050505050565b610960611267565b61096a60006112c1565b565b610974611267565b6109938260070b60009081526005602052604090206004015460ff1690565b6109af5760405162461bcd60e51b815260040161034d906116dc565b600782900b600090815260056020526040812060048101805460ff191690559080805b60048160ff161015610b945760005b8460030160008360ff1660038111156109fc576109fc61166d565b6003811115610a0d57610a0d61166d565b6003811115610a1e57610a1e61166d565b8152602081019190915260400160002054811015610b8157856003811115610a4857610a4861166d565b8260ff166003811115610a5d57610a5d61166d565b6003811115610a6e57610a6e61166d565b03610af3578460030160008360ff166003811115610a8e57610a8e61166d565b6003811115610a9f57610a9f61166d565b6003811115610ab057610ab061166d565b81526020019081526020016000208181548110610acf57610acf611657565b90600052602060002090600202016001015483610aec9190611729565b9250610b6f565b8460030160008360ff166003811115610b0e57610b0e61166d565b6003811115610b1f57610b1f61166d565b6003811115610b3057610b3061166d565b81526020019081526020016000208181548110610b4f57610b4f611657565b90600052602060002090600202016001015484610b6c9190611729565b93505b80610b7981611742565b9150506109e1565b5080610b8c8161175b565b9150506109d2565b5060006064610bc37f00000000000000000000000000000000000000000000000000000000000000008561177a565b610bcd9190611791565b90506000610bdb82856117b3565b60015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590529192506000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c799190611683565b905080610cc85760405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220746f207472656173757279206661696c65640000000000604482015260640161034d565b60005b866003016000896003811115610ce357610ce361166d565b6003811115610cf457610cf461166d565b8152602081019190915260400160002054811015610f0b5760008760030160008a6003811115610d2657610d2661166d565b6003811115610d3757610d3761166d565b81526020019081526020016000208281548110610d5657610d56611657565b90600052602060002090600202019050600086858360010154610d79919061177a565b610d839190611791565b90506000818360010154610d979190611729565b835460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529192506000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e349190611683565b905080610e835760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206661696c656420666f722077696e6e6572000000000000604482015260640161034d565b7fc2dc76ce664ffea95879f58074e6b60c3ebb762a62b91e9af938873a81c28d148d8560000160009054906101000a90046001600160a01b031684604051610eec9392919060079390930b83526001600160a01b03919091166020830152604082015260600190565b60405180910390a1505050508080610f0390611742565b915050610ccb565b507f877256d94166a4680c11c46305317970e021267850136384bfa290a9d1bbbf848888604051610f3d9291906117c6565b60405180910390a15050505050505050565b610f57611267565b610f768160070b60009081526005602052604090206004015460ff1690565b610f925760405162461bcd60e51b815260040161034d906116dc565b600781900b6000908152600560205260408120905b60048160ff16101561116f5760008160ff166003811115610fca57610fca61166d565b90506000836003016000836003811115610fe657610fe661166d565b6003811115610ff757610ff761166d565b8152602001908152602001600020905060005b815461ffff82161015611159576000828261ffff168154811061102f5761102f611657565b90600052602060002090600202016001015490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb848461ffff168154811061108857611088611657565b600091825260209091206002909102015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156110e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110a9190611683565b6111465760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b604482015260640161034d565b5080611151816116bb565b91505061100a565b50505080806111679061175b565b915050610fa7565b5060048101805460ff19169055604051600783900b81527f5a51be1110849734862b57434894be46168d278d43436e2240f0e9c97967e8f79060200160405180910390a15050565b600681815481106111c757600080fd5b9060005260206000209060049182820401919006600802915054906101000a900460070b81565b6111f6611267565b6001600160a01b03811661125b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034d565b611264816112c1565b50565b6000546001600160a01b0316331461096a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561134c579160200282015b8281111561134c578235825591602001919060010190611331565b5061135892915061135c565b5090565b5b80821115611358576000815560010161135d565b8035600781900b811461138357600080fd5b919050565b60008083601f84011261139a57600080fd5b50813567ffffffffffffffff8111156113b257600080fd5b6020830191508360208260051b85010111156113cd57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b80356004811061138357600080fd5b600082601f83011261140a57600080fd5b8135602067ffffffffffffffff80831115611427576114276113d4565b8260051b604051601f19603f8301168101818110848211171561144c5761144c6113d4565b60405293845285810183019383810192508785111561146a57600080fd5b83870191505b8482101561149057611481826113ea565b83529183019190830190611470565b979650505050505050565b60008060008060008060008060008060e08b8d0312156114ba57600080fd5b6114c38b611371565b995060208b0135985060408b0135975060608b013567ffffffffffffffff808211156114ee57600080fd5b6114fa8e838f01611388565b909950975060808d013591508082111561151357600080fd5b61151f8e838f01611388565b909750955060a08d013591508082111561153857600080fd5b6115448e838f01611388565b909550935060c08d013591508082111561155d57600080fd5b5061156a8d828e016113f9565b9150509295989b9194979a5092959850565b6020808252825182820181905260009190848201906040850190845b818110156115b457835183529284019291840191600101611598565b50909695505050505050565b6000602082840312156115d257600080fd5b6115db82611371565b9392505050565b600080604083850312156115f557600080fd5b6115fe83611371565b915061160c602084016113ea565b90509250929050565b60006020828403121561162757600080fd5b5035919050565b60006020828403121561164057600080fd5b81356001600160a01b03811681146115db57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60006020828403121561169557600080fd5b815180151581146115db57600080fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168181036116d2576116d26116a5565b6001019392505050565b6020808252602d908201527f4e6f2067616d6520696e2070726f677265737320666f7220746869732054656c60408201526c1959dc985b4818da185d081251609a1b606082015260800190565b8082018082111561173c5761173c6116a5565b92915050565b600060018201611754576117546116a5565b5060010190565b600060ff821660ff8103611771576117716116a5565b60010192915050565b808202811582820484141761173c5761173c6116a5565b6000826117ae57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561173c5761173c6116a5565b600783900b815260408101600483106117ef57634e487b7160e01b600052602160045260246000fd5b826020830152939250505056fea26469706673582212202c20b3a610c5e49c61f7d17ce2f2d56457aeda27e7fc4da4f9691922d5118c2c64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "abortGame(int64)": {
        "details": "Abort a game and refund the bets. Use in emergencies      e.g. bot crash.",
        "params": {
          "_tgChatId": "Telegram group of this game"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1910,
        "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
        "label": "treasury",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1912,
        "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
        "label": "controller",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1921,
        "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
        "label": "minRaceLength",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1923,
        "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
        "label": "maxRaceLength",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1928,
        "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
        "label": "games",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_int64,t_struct(Game)1908_storage)"
      },
      {
        "astId": 1931,
        "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
        "label": "activeTgGroups",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_int64)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_int64)dyn_storage": {
        "base": "t_int64",
        "encoding": "dynamic_array",
        "label": "int64[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BetInfo)1891_storage)dyn_storage": {
        "base": "t_struct(BetInfo)1891_storage",
        "encoding": "dynamic_array",
        "label": "struct TelegramPEPERace.BetInfo[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Suit)1886": {
        "encoding": "inplace",
        "label": "enum TelegramPEPERace.Suit",
        "numberOfBytes": "1"
      },
      "t_int64": {
        "encoding": "inplace",
        "label": "int64",
        "numberOfBytes": "8"
      },
      "t_mapping(t_enum(Suit)1886,t_array(t_struct(BetInfo)1891_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_enum(Suit)1886",
        "label": "mapping(enum TelegramPEPERace.Suit => struct TelegramPEPERace.BetInfo[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BetInfo)1891_storage)dyn_storage"
      },
      "t_mapping(t_int64,t_struct(Game)1908_storage)": {
        "encoding": "mapping",
        "key": "t_int64",
        "label": "mapping(int64 => struct TelegramPEPERace.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)1908_storage"
      },
      "t_struct(BetInfo)1891_storage": {
        "encoding": "inplace",
        "label": "struct TelegramPEPERace.BetInfo",
        "members": [
          {
            "astId": 1888,
            "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
            "label": "player",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1890,
            "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Game)1908_storage": {
        "encoding": "inplace",
        "label": "struct TelegramPEPERace.Game",
        "members": [
          {
            "astId": 1893,
            "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
            "label": "raceLength",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1895,
            "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
            "label": "minBet",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1898,
            "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
            "label": "drawnCards",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 1905,
            "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
            "label": "betsOnSuits",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Suit)1886,t_array(t_struct(BetInfo)1891_storage)dyn_storage)"
          },
          {
            "astId": 1907,
            "contract": "contracts/TelegramPEPERace.sol:TelegramPEPERace",
            "label": "inProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}